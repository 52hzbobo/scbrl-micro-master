Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec: startup date [Mon Nov 20 16:34:45 CST 2017]; root of context hierarchy
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
HV000001: Hibernate Validator 5.3.5.Final
Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$45b14773] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d6f623d: startup date [Mon Nov 20 16:34:46 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Cannot enhance @Configuration bean definition 'refreshScope' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
BeanFactory id=f03e22e4-23ca-3405-90b1-5c75f13d52bd
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$45b14773] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$c2450cb0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7a729f84' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$e719af62] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.16
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1312 ms
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'springSecurityFilterChain' to: [/*]
Mapping servlet: 'dispatcherServlet' to [/]
Mapped "{[/main]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.main(javax.servlet.http.HttpServletRequest)
Mapped "{[/message]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.message()
Mapped "{[/smsinfo]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.smsinfo()
Mapped "{[/logout]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.loginOut(javax.servlet.http.HttpServletRequest)
Mapped "{[/home]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.home()
Mapped "{[/login]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
Mapped "{[/identify]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.identify()
Mapped "{[/userinfo]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.userinfo()
Mapped "{[/]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.TestController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/add]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.TestController.add(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d6f623d: startup date [Mon Nov 20 16:34:46 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Creating filter chain: Ant [pattern='/static/**'], []
Creating filter chain: Ant [pattern='/templates/**'], []
Creating filter chain: Ant [pattern='/loginOut'], []
Creating filter chain: Ant [pattern='/'], []
Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3730f716, org.springframework.security.web.context.SecurityContextPersistenceFilter@61ff6a49, org.springframework.security.web.header.HeaderWriterFilter@799f916e, org.springframework.security.web.authentication.logout.LogoutFilter@3a4aadf8, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6b357eb6, org.springframework.security.web.session.ConcurrentSessionFilter@15d0d6c9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6042d663, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@535a518c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7730ef88, org.springframework.security.web.session.SessionManagementFilter@21de60a7, org.springframework.security.web.access.ExceptionTranslationFilter@162c1dfb, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1e1232cf]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
No URLs will be polled as dynamic configuration sources.
To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
No URLs will be polled as dynamic configuration sources.
To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
Registering beans for JMX exposure on startup
Bean with name 'refreshScope' has been autodetected for JMX exposure
Bean with name 'environmentManager' has been autodetected for JMX exposure
Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4d6f623d,type=ConfigurationPropertiesRebinder]
Starting beans in phase 0
Setting initial instance status as: STARTING
Using JSON encoding codec LegacyJacksonJson
Using JSON decoding codec LegacyJacksonJson
Using XML encoding codec XStreamXml
Using XML decoding codec XStreamXml
Resolving eureka endpoints via configuration
Disable delta property : false
Single vip registry refresh property : null
Force full registry fetch : false
Application is null : false
Registered Applications size is zero : true
Application version is -1: true
Getting all instance registry info from the eureka server
The response status is 200
Starting heartbeat executor: renew interval is: 30
InstanceInfoReplicator onDemand update allowed rate per min is 4
Discovery Client initialized at timestamp 1511166890991 with initial instances count: 2
Registering application scweb-service with eureka with status UP
Saw local status change event StatusChangeEvent [timestamp=1511166891040, current=UP, previous=STARTING]
DiscoveryClient_SCWEB-SERVICE/192.168.10.112:scweb-service:8088: registering service...
Initializing ProtocolHandler ["http-nio-8088"]
Starting ProtocolHandler ["http-nio-8088"]
DiscoveryClient_SCWEB-SERVICE/192.168.10.112:scweb-service:8088 - registration status: 204
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http)
Updating port to 8088
Started ScbrlWebApplication in 5.97 seconds (JVM running for 6.51)
[------------------- >>> SpringBootApplication Main Start In ScbrlApplication <<< -------------------]
A cookie header was received [1506871140,1507536467,1507598270] that contained an invalid cookie. That cookie will be ignored.Note: further occurrences of this error will be logged at DEBUG level.
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 16 ms
>>>>>>>>>>>>>>>>>>>>: null
>>>>>>>>>>>>>>>>>>>>: null
>>>>>>>>>>>>>>>>>>>>: null
Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1983d950: startup date [Mon Nov 20 16:35:27 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d6f623d
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Flipping property: provider-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
Shutdown hook installed for: NFLoadBalancer-PingTimer-provider-service
Client:provider-service instantiated a LoadBalancer:DynamicServerListLoadBalancer:{NFLoadBalancer:name=provider-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
Using serverListUpdater PollingServerListUpdater
Flipping property: provider-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
DynamicServerListLoadBalancer for client provider-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=provider-service,current list of Servers=[192.168.10.112:8012, 192.168.10.112:8013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:2;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.10.112:8013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
, [Server:192.168.10.112:8012;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1c0c7ff7
Flipping property: provider-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
登录成功！！
No mapping found for HTTP request with URI [/img/leftimg.png] in DispatcherServlet with name 'dispatcherServlet'
No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
No mapping found for HTTP request with URI [/statics/console/images/icon_lit1.png] in DispatcherServlet with name 'dispatcherServlet'
Logged out successfully. 退出成功！
>>>>>>>>>>>>>>>>>>>>: null
Shutting down the Executor Pool for PollingServerListUpdater
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d6f623d: startup date [Mon Nov 20 16:34:46 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Unregistering application scweb-service with eureka with status DOWN
Saw local status change event StatusChangeEvent [timestamp=1511166946204, current=DOWN, previous=UP]
Shutting down DiscoveryClient ...
DiscoveryClient_SCWEB-SERVICE/192.168.10.112:scweb-service:8088: registering service...
Unregistering ...
DiscoveryClient_SCWEB-SERVICE/192.168.10.112:scweb-service:8088 - registration status: 204
DiscoveryClient_SCWEB-SERVICE/192.168.10.112:scweb-service:8088 - deregister  status: 200
Completed shut down of DiscoveryClient
Stopping beans in phase 0
Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@1983d950: startup date [Mon Nov 20 16:35:27 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d6f623d
Unregistering application scweb-service with eureka with status DOWN
Shutdown hook removed for: NFLoadBalancer-PingTimer-provider-service
Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:614)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:886)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:274)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:70)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec: startup date [Mon Nov 20 20:17:55 CST 2017]; root of context hierarchy
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7fafbc3c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
HV000001: Hibernate Validator 5.3.5.Final
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5b3f3ba0: startup date [Mon Nov 20 20:17:55 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Cannot enhance @Configuration bean definition 'refreshScope' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
BeanFactory id=f03e22e4-23ca-3405-90b1-5c75f13d52bd
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7fafbc3c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$fc438179] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@762637be' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$2118242b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.16
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1349 ms
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'springSecurityFilterChain' to: [/*]
Mapping servlet: 'dispatcherServlet' to [/]
Mapped "{[/main]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.main(javax.servlet.http.HttpServletRequest)
Mapped "{[/message]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.message()
Mapped "{[/userinfo]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.userinfo()
Mapped "{[/login]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
Mapped "{[/identify]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.identify()
Mapped "{[/smsinfo]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.smsinfo()
Mapped "{[/home]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.home()
Mapped "{[/logout]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.loginOut(javax.servlet.http.HttpServletRequest)
Mapped "{[/]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.TestController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/add]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.TestController.add(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5b3f3ba0: startup date [Mon Nov 20 20:17:55 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Creating filter chain: Ant [pattern='/static/**'], []
Creating filter chain: Ant [pattern='/templates/**'], []
Creating filter chain: Ant [pattern='/loginOut'], []
Creating filter chain: Ant [pattern='/'], []
Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@58687fb7, org.springframework.security.web.context.SecurityContextPersistenceFilter@1472208d, org.springframework.security.web.header.HeaderWriterFilter@3f857e08, org.springframework.security.web.authentication.logout.LogoutFilter@517704, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5d9618f2, org.springframework.security.web.session.ConcurrentSessionFilter@36f6e521, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6de004f1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@57bd6a8f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3554bdc0, org.springframework.security.web.session.SessionManagementFilter@b5ac0c1, org.springframework.security.web.access.ExceptionTranslationFilter@7e52a26b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@784d9bc]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
No URLs will be polled as dynamic configuration sources.
To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
No URLs will be polled as dynamic configuration sources.
To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
Registering beans for JMX exposure on startup
Bean with name 'refreshScope' has been autodetected for JMX exposure
Bean with name 'environmentManager' has been autodetected for JMX exposure
Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5b3f3ba0,type=ConfigurationPropertiesRebinder]
Starting beans in phase 0
Setting initial instance status as: STARTING
Using JSON encoding codec LegacyJacksonJson
Using JSON decoding codec LegacyJacksonJson
Using XML encoding codec XStreamXml
Using XML decoding codec XStreamXml
Resolving eureka endpoints via configuration
Disable delta property : false
Single vip registry refresh property : null
Force full registry fetch : false
Application is null : false
Registered Applications size is zero : true
Application version is -1: true
Getting all instance registry info from the eureka server
The response status is 200
Starting heartbeat executor: renew interval is: 30
InstanceInfoReplicator onDemand update allowed rate per min is 4
Discovery Client initialized at timestamp 1511180280647 with initial instances count: 1
Registering application scweb-service with eureka with status UP
Saw local status change event StatusChangeEvent [timestamp=1511180280701, current=UP, previous=STARTING]
DiscoveryClient_SCWEB-SERVICE/192.168.10.109:scweb-service:8088: registering service...
Initializing ProtocolHandler ["http-nio-8088"]
Starting ProtocolHandler ["http-nio-8088"]
DiscoveryClient_SCWEB-SERVICE/192.168.10.109:scweb-service:8088 - registration status: 204
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http)
Updating port to 8088
Started ScbrlWebApplication in 6.327 seconds (JVM running for 7.131)
[------------------- >>> SpringBootApplication Main Start In ScbrlApplication <<< -------------------]
A cookie header was received [1506871140,1507536467,1507598270] that contained an invalid cookie. That cookie will be ignored.Note: further occurrences of this error will be logged at DEBUG level.
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
>>>>>>>>>>>>>>>>>>>>: null
>>>>>>>>>>>>>>>>>>>>: null
Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@d502f5b: startup date [Mon Nov 20 20:19:15 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5b3f3ba0
Request execution failure
Request execution succeeded on retry #1
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Flipping property: provider-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
Shutdown hook installed for: NFLoadBalancer-PingTimer-provider-service
Client:provider-service instantiated a LoadBalancer:DynamicServerListLoadBalancer:{NFLoadBalancer:name=provider-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
Using serverListUpdater PollingServerListUpdater
Flipping property: provider-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
DynamicServerListLoadBalancer for client provider-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=provider-service,current list of Servers=[192.168.10.109:8012],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.10.109:8012;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@7af46539
登录认证失败:Wrong password. 账户或密码不正确！|null
>>>>>>>>>>>>>>>>>>>>: Wrong password. 账户或密码不正确！
>>>>>>>>>>>>>>>>>>>>: null
Flipping property: provider-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
Resolving eureka endpoints via configuration
登录认证失败:Wrong password. 账户或密码不正确！|null
>>>>>>>>>>>>>>>>>>>>: Wrong password. 账户或密码不正确！
>>>>>>>>>>>>>>>>>>>>: null
登录认证失败:Wrong password. 账户或密码不正确！|null
>>>>>>>>>>>>>>>>>>>>: Wrong password. 账户或密码不正确！
>>>>>>>>>>>>>>>>>>>>: null
Resolving eureka endpoints via configuration
登录成功！！
No mapping found for HTTP request with URI [/img/leftimg.png] in DispatcherServlet with name 'dispatcherServlet'
No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
No mapping found for HTTP request with URI [/statics/console/images/icon_lit1.png] in DispatcherServlet with name 'dispatcherServlet'
No mapping found for HTTP request with URI [/statics/console/images/icon_lit1.png] in DispatcherServlet with name 'dispatcherServlet'
No mapping found for HTTP request with URI [/statics/console/images/icon_lit1.png] in DispatcherServlet with name 'dispatcherServlet'
No mapping found for HTTP request with URI [/img/leftimg.png] in DispatcherServlet with name 'dispatcherServlet'
No mapping found for HTTP request with URI [/img/leftimg.png] in DispatcherServlet with name 'dispatcherServlet'
Resolving eureka endpoints via configuration
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5b3f3ba0: startup date [Mon Nov 20 20:17:55 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Shutting down the Executor Pool for PollingServerListUpdater
Unregistering application scweb-service with eureka with status DOWN
Saw local status change event StatusChangeEvent [timestamp=1511181442669, current=DOWN, previous=UP]
DiscoveryClient_SCWEB-SERVICE/192.168.10.109:scweb-service:8088: registering service...
Shutting down DiscoveryClient ...
Unregistering ...
DiscoveryClient_SCWEB-SERVICE/192.168.10.109:scweb-service:8088 - deregister  status: 200
DiscoveryClient_SCWEB-SERVICE/192.168.10.109:scweb-service:8088 - registration status: 204
Completed shut down of DiscoveryClient
Stopping beans in phase 0
Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@d502f5b: startup date [Mon Nov 20 20:19:15 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5b3f3ba0
Unregistering application scweb-service with eureka with status DOWN
Shutdown hook removed for: NFLoadBalancer-PingTimer-provider-service
Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:614)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:886)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:274)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:70)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec: startup date [Mon Nov 20 20:38:00 CST 2017]; root of context hierarchy
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
HV000001: Hibernate Validator 5.3.5.Final
Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$45b14773] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@705202d1: startup date [Mon Nov 20 20:38:01 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Cannot enhance @Configuration bean definition 'refreshScope' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
BeanFactory id=f03e22e4-23ca-3405-90b1-5c75f13d52bd
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$45b14773] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$c2450cb0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@75483843' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$e719af62] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.16
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1282 ms
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'springSecurityFilterChain' to: [/*]
Mapping servlet: 'dispatcherServlet' to [/]
Mapped "{[/main]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.main(javax.servlet.http.HttpServletRequest)
Mapped "{[/message]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.message()
Mapped "{[/logout]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.loginOut(javax.servlet.http.HttpServletRequest)
Mapped "{[/home]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.home()
Mapped "{[/login]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
Mapped "{[/smsinfo]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.smsinfo()
Mapped "{[/identify]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.identify()
Mapped "{[/userinfo]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.userinfo()
Mapped "{[/]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.TestController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/add]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.TestController.add(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@705202d1: startup date [Mon Nov 20 20:38:01 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Creating filter chain: Ant [pattern='/static/**'], []
Creating filter chain: Ant [pattern='/templates/**'], []
Creating filter chain: Ant [pattern='/loginOut'], []
Creating filter chain: Ant [pattern='/'], []
Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@55e1192, org.springframework.security.web.context.SecurityContextPersistenceFilter@65be88ae, org.springframework.security.web.header.HeaderWriterFilter@1f7cec93, org.springframework.security.web.authentication.logout.LogoutFilter@24dd44f9, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6a3fbcb1, org.springframework.security.web.session.ConcurrentSessionFilter@7ab802f4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@70ede57d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@63f40ca0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1213ffbc, org.springframework.security.web.session.SessionManagementFilter@3cdff901, org.springframework.security.web.access.ExceptionTranslationFilter@668cc9a2, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4a70d302]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
No URLs will be polled as dynamic configuration sources.
To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
No URLs will be polled as dynamic configuration sources.
To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
Registering beans for JMX exposure on startup
Bean with name 'refreshScope' has been autodetected for JMX exposure
Bean with name 'environmentManager' has been autodetected for JMX exposure
Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=705202d1,type=ConfigurationPropertiesRebinder]
Starting beans in phase 0
Setting initial instance status as: STARTING
Using JSON encoding codec LegacyJacksonJson
Using JSON decoding codec LegacyJacksonJson
Using XML encoding codec XStreamXml
Using XML decoding codec XStreamXml
Resolving eureka endpoints via configuration
Disable delta property : false
Single vip registry refresh property : null
Force full registry fetch : false
Application is null : false
Registered Applications size is zero : true
Application version is -1: true
Getting all instance registry info from the eureka server
The response status is 200
Starting heartbeat executor: renew interval is: 30
InstanceInfoReplicator onDemand update allowed rate per min is 4
Discovery Client initialized at timestamp 1511181486094 with initial instances count: 2
Registering application scweb-service with eureka with status UP
Saw local status change event StatusChangeEvent [timestamp=1511181486148, current=UP, previous=STARTING]
DiscoveryClient_SCWEB-SERVICE/192.168.10.109:scweb-service:8088: registering service...
Initializing ProtocolHandler ["http-nio-8088"]
DiscoveryClient_SCWEB-SERVICE/192.168.10.109:scweb-service:8088 - registration status: 204
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http)
Updating port to 8088
Started ScbrlWebApplication in 6.02 seconds (JVM running for 6.487)
[------------------- >>> SpringBootApplication Main Start In ScbrlApplication <<< -------------------]
A cookie header was received [1506871140,1507536467,1507598270; JSESSIONID=AB82863BE20B97B957667FE9A0D8618F] that contained an invalid cookie. That cookie will be ignored.Note: further occurrences of this error will be logged at DEBUG level.
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
>>>>>>>>>>>>>>>>>>>>: null
>>>>>>>>>>>>>>>>>>>>: null
Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@331fd7a4: startup date [Mon Nov 20 20:38:14 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@705202d1
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Flipping property: provider-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
Shutdown hook installed for: NFLoadBalancer-PingTimer-provider-service
Client:provider-service instantiated a LoadBalancer:DynamicServerListLoadBalancer:{NFLoadBalancer:name=provider-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
Using serverListUpdater PollingServerListUpdater
Flipping property: provider-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
DynamicServerListLoadBalancer for client provider-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=provider-service,current list of Servers=[192.168.10.109:8012],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.10.109:8012;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5512835a
登录认证失败:Wrong password. 账户或密码不正确！|null
>>>>>>>>>>>>>>>>>>>>: Wrong password. 账户或密码不正确！
Flipping property: provider-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
登录认证失败:Wrong password. 账户或密码不正确！|null
>>>>>>>>>>>>>>>>>>>>: Wrong password. 账户或密码不正确！
Resolving eureka endpoints via configuration
登录认证失败:user select fail. 登录用户数据异常！|null
>>>>>>>>>>>>>>>>>>>>: user select fail. 登录用户数据异常！
Shutting down the Executor Pool for PollingServerListUpdater
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@705202d1: startup date [Mon Nov 20 20:38:01 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Unregistering application scweb-service with eureka with status DOWN
Saw local status change event StatusChangeEvent [timestamp=1511181818671, current=DOWN, previous=UP]
DiscoveryClient_SCWEB-SERVICE/192.168.10.109:scweb-service:8088: registering service...
Shutting down DiscoveryClient ...
Unregistering ...
DiscoveryClient_SCWEB-SERVICE/192.168.10.109:scweb-service:8088 - deregister  status: 200
DiscoveryClient_SCWEB-SERVICE/192.168.10.109:scweb-service:8088 - registration status: 204
Completed shut down of DiscoveryClient
Stopping beans in phase 0
Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@331fd7a4: startup date [Mon Nov 20 20:38:14 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@705202d1
Unregistering application scweb-service with eureka with status DOWN
Shutdown hook removed for: NFLoadBalancer-PingTimer-provider-service
Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:614)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:886)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:274)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:70)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec: startup date [Mon Nov 20 20:43:52 CST 2017]; root of context hierarchy
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
HV000001: Hibernate Validator 5.3.5.Final
Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a89d698a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@102d92c4: startup date [Mon Nov 20 20:43:53 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Cannot enhance @Configuration bean definition 'refreshScope' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
BeanFactory id=f03e22e4-23ca-3405-90b1-5c75f13d52bd
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a89d698a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$25312ec7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2938127d' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$4a05d179] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.16
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1246 ms
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'springSecurityFilterChain' to: [/*]
Mapping servlet: 'dispatcherServlet' to [/]
Mapped "{[/main]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.main(javax.servlet.http.HttpServletRequest)
Mapped "{[/message]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.message()
Mapped "{[/smsinfo]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.smsinfo()
Mapped "{[/logout]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.loginOut(javax.servlet.http.HttpServletRequest)
Mapped "{[/login]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
Mapped "{[/home]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.home()
Mapped "{[/identify]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.identify()
Mapped "{[/userinfo]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.userinfo()
Mapped "{[/]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.TestController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/add]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.TestController.add(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@102d92c4: startup date [Mon Nov 20 20:43:53 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Creating filter chain: Ant [pattern='/static/**'], []
Creating filter chain: Ant [pattern='/templates/**'], []
Creating filter chain: Ant [pattern='/loginOut'], []
Creating filter chain: Ant [pattern='/'], []
Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6dcab9d9, org.springframework.security.web.context.SecurityContextPersistenceFilter@280fafd, org.springframework.security.web.header.HeaderWriterFilter@49580ca8, org.springframework.security.web.authentication.logout.LogoutFilter@273fa9e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@b379bc6, org.springframework.security.web.session.ConcurrentSessionFilter@77524ca7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@14b275bd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@8840c98, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5a14e60d, org.springframework.security.web.session.SessionManagementFilter@42fc4ac4, org.springframework.security.web.access.ExceptionTranslationFilter@3554bdc0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@65eb3597]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
No URLs will be polled as dynamic configuration sources.
To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
No URLs will be polled as dynamic configuration sources.
To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
Registering beans for JMX exposure on startup
Bean with name 'refreshScope' has been autodetected for JMX exposure
Bean with name 'environmentManager' has been autodetected for JMX exposure
Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=102d92c4,type=ConfigurationPropertiesRebinder]
Starting beans in phase 0
Setting initial instance status as: STARTING
Using JSON encoding codec LegacyJacksonJson
Using JSON decoding codec LegacyJacksonJson
Using XML encoding codec XStreamXml
Using XML decoding codec XStreamXml
Resolving eureka endpoints via configuration
Disable delta property : false
Single vip registry refresh property : null
Force full registry fetch : false
Application is null : false
Registered Applications size is zero : true
Application version is -1: true
Getting all instance registry info from the eureka server
The response status is 200
Starting heartbeat executor: renew interval is: 30
InstanceInfoReplicator onDemand update allowed rate per min is 4
Discovery Client initialized at timestamp 1511181837453 with initial instances count: 2
Registering application scweb-service with eureka with status UP
Saw local status change event StatusChangeEvent [timestamp=1511181837508, current=UP, previous=STARTING]
DiscoveryClient_SCWEB-SERVICE/192.168.10.109:scweb-service:8088: registering service...
Initializing ProtocolHandler ["http-nio-8088"]
DiscoveryClient_SCWEB-SERVICE/192.168.10.109:scweb-service:8088 - registration status: 204
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http)
Updating port to 8088
Started ScbrlWebApplication in 5.663 seconds (JVM running for 6.125)
[------------------- >>> SpringBootApplication Main Start In ScbrlApplication <<< -------------------]
Resolving eureka endpoints via configuration
Resolving eureka endpoints via configuration
Resolving eureka endpoints via configuration
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@102d92c4: startup date [Mon Nov 20 20:43:53 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Unregistering application scweb-service with eureka with status DOWN
Saw local status change event StatusChangeEvent [timestamp=1511182784372, current=DOWN, previous=UP]
DiscoveryClient_SCWEB-SERVICE/192.168.10.109:scweb-service:8088: registering service...
Shutting down DiscoveryClient ...
Unregistering ...
DiscoveryClient_SCWEB-SERVICE/192.168.10.109:scweb-service:8088 - deregister  status: 200
DiscoveryClient_SCWEB-SERVICE/192.168.10.109:scweb-service:8088 - registration status: 204
Completed shut down of DiscoveryClient
Stopping beans in phase 0
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec: startup date [Mon Nov 20 21:01:46 CST 2017]; root of context hierarchy
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
HV000001: Hibernate Validator 5.3.5.Final
Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c38f032f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@69cac930: startup date [Mon Nov 20 21:01:47 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Cannot enhance @Configuration bean definition 'refreshScope' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
BeanFactory id=f03e22e4-23ca-3405-90b1-5c75f13d52bd
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c38f032f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$4022c86c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@709ed6f3' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$64f76b1e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.16
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1248 ms
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'springSecurityFilterChain' to: [/*]
Mapping servlet: 'dispatcherServlet' to [/]
Mapped "{[/main]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.main(javax.servlet.http.HttpServletRequest)
Mapped "{[/message]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.message()
Mapped "{[/identify]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.identify()
Mapped "{[/logout]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.loginOut(javax.servlet.http.HttpServletRequest)
Mapped "{[/home]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.home()
Mapped "{[/login]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
Mapped "{[/smsinfo]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.smsinfo()
Mapped "{[/userinfo]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.userinfo()
Mapped "{[/]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.TestController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/add]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.TestController.add(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@69cac930: startup date [Mon Nov 20 21:01:47 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Creating filter chain: Ant [pattern='/static/**'], []
Creating filter chain: Ant [pattern='/templates/**'], []
Creating filter chain: Ant [pattern='/loginOut'], []
Creating filter chain: Ant [pattern='/'], []
Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1e1e837d, org.springframework.security.web.context.SecurityContextPersistenceFilter@740a0d5e, org.springframework.security.web.header.HeaderWriterFilter@57bd6a8f, org.springframework.security.web.authentication.logout.LogoutFilter@6f930e0, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4b03cbad, org.springframework.security.web.session.ConcurrentSessionFilter@16a3cc88, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@265c1a7c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@14b528b6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4b957db0, org.springframework.security.web.session.SessionManagementFilter@517704, org.springframework.security.web.access.ExceptionTranslationFilter@68ea253b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@39e53bef]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
No URLs will be polled as dynamic configuration sources.
To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
No URLs will be polled as dynamic configuration sources.
To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
Registering beans for JMX exposure on startup
Bean with name 'refreshScope' has been autodetected for JMX exposure
Bean with name 'environmentManager' has been autodetected for JMX exposure
Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=69cac930,type=ConfigurationPropertiesRebinder]
Starting beans in phase 0
Setting initial instance status as: STARTING
Using JSON encoding codec LegacyJacksonJson
Using JSON decoding codec LegacyJacksonJson
Using XML encoding codec XStreamXml
Using XML decoding codec XStreamXml
Resolving eureka endpoints via configuration
Disable delta property : false
Single vip registry refresh property : null
Force full registry fetch : false
Application is null : false
Registered Applications size is zero : true
Application version is -1: true
Getting all instance registry info from the eureka server
The response status is 200
Starting heartbeat executor: renew interval is: 30
InstanceInfoReplicator onDemand update allowed rate per min is 4
Discovery Client initialized at timestamp 1511182911981 with initial instances count: 1
Registering application scweb-service with eureka with status UP
Saw local status change event StatusChangeEvent [timestamp=1511182912034, current=UP, previous=STARTING]
DiscoveryClient_SCWEB-SERVICE/192.168.10.109:scweb-service:8088: registering service...
Initializing ProtocolHandler ["http-nio-8088"]
Starting ProtocolHandler ["http-nio-8088"]
DiscoveryClient_SCWEB-SERVICE/192.168.10.109:scweb-service:8088 - registration status: 204
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http)
Updating port to 8088
Started ScbrlWebApplication in 5.89 seconds (JVM running for 6.635)
[------------------- >>> SpringBootApplication Main Start In ScbrlApplication <<< -------------------]
A cookie header was received [1506871140,1507536467,1507598270] that contained an invalid cookie. That cookie will be ignored.Note: further occurrences of this error will be logged at DEBUG level.
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
>>>>>>>>>>>>>>>>>>>>: null
>>>>>>>>>>>>>>>>>>>>: null
Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@39e63157: startup date [Mon Nov 20 21:02:40 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@69cac930
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Flipping property: provider-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
Shutdown hook installed for: NFLoadBalancer-PingTimer-provider-service
Client:provider-service instantiated a LoadBalancer:DynamicServerListLoadBalancer:{NFLoadBalancer:name=provider-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
Using serverListUpdater PollingServerListUpdater
Flipping property: provider-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
DynamicServerListLoadBalancer for client provider-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=provider-service,current list of Servers=[192.168.10.109:8012],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.10.109:8012;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@13812d90
Flipping property: provider-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
登录认证失败:Wrong password. 账户或密码不正确！|null
>>>>>>>>>>>>>>>>>>>>: Wrong password. 账户或密码不正确！
>>>>>>>>>>>>>>>>>>>>: null
登录认证失败:Wrong password. 账户或密码不正确！|null
>>>>>>>>>>>>>>>>>>>>: Wrong password. 账户或密码不正确！
>>>>>>>>>>>>>>>>>>>>: null
Shutting down the Executor Pool for PollingServerListUpdater
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@69cac930: startup date [Mon Nov 20 21:01:47 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Unregistering application scweb-service with eureka with status DOWN
Saw local status change event StatusChangeEvent [timestamp=1511183081637, current=DOWN, previous=UP]
DiscoveryClient_SCWEB-SERVICE/192.168.10.109:scweb-service:8088: registering service...
Shutting down DiscoveryClient ...
Unregistering ...
DiscoveryClient_SCWEB-SERVICE/192.168.10.109:scweb-service:8088 - registration status: 204
DiscoveryClient_SCWEB-SERVICE/192.168.10.109:scweb-service:8088 - deregister  status: 200
Completed shut down of DiscoveryClient
Stopping beans in phase 0
Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@39e63157: startup date [Mon Nov 20 21:02:40 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@69cac930
Unregistering application scweb-service with eureka with status DOWN
Shutdown hook removed for: NFLoadBalancer-PingTimer-provider-service
Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:614)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:886)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:274)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:70)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec: startup date [Mon Nov 20 21:33:30 CST 2017]; root of context hierarchy
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
HV000001: Hibernate Validator 5.3.5.Final
Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9e321b21] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78c7f9b3: startup date [Mon Nov 20 21:33:31 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Cannot enhance @Configuration bean definition 'refreshScope' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
BeanFactory id=f03e22e4-23ca-3405-90b1-5c75f13d52bd
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9e321b21] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$1ac5e05e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5b9396d3' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$3f9a8310] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.16
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1247 ms
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'springSecurityFilterChain' to: [/*]
Mapping servlet: 'dispatcherServlet' to [/]
Mapped "{[/main]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.main(javax.servlet.http.HttpServletRequest)
Mapped "{[/message]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.message()
Mapped "{[/logout]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.loginOut(javax.servlet.http.HttpServletRequest)
Mapped "{[/login]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
Mapped "{[/home]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.home()
Mapped "{[/smsinfo]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.smsinfo()
Mapped "{[/identify]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.identify()
Mapped "{[/userinfo]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.userinfo()
Mapped "{[/]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.TestController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/add]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.TestController.add(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78c7f9b3: startup date [Mon Nov 20 21:33:31 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Creating filter chain: Ant [pattern='/static/**'], []
Creating filter chain: Ant [pattern='/templates/**'], []
Creating filter chain: Ant [pattern='/loginOut'], []
Creating filter chain: Ant [pattern='/'], []
Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@ab4aa5e, org.springframework.security.web.context.SecurityContextPersistenceFilter@c2cf597, org.springframework.security.web.header.HeaderWriterFilter@6637a365, org.springframework.security.web.authentication.logout.LogoutFilter@1f78d415, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2744dcae, org.springframework.security.web.session.ConcurrentSessionFilter@40943a6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2abafa97, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@587c5c1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@b14b60a, org.springframework.security.web.session.SessionManagementFilter@1ef31f71, org.springframework.security.web.access.ExceptionTranslationFilter@1213ffbc, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@22a260ff]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
No URLs will be polled as dynamic configuration sources.
To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
No URLs will be polled as dynamic configuration sources.
To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
Registering beans for JMX exposure on startup
Bean with name 'refreshScope' has been autodetected for JMX exposure
Bean with name 'environmentManager' has been autodetected for JMX exposure
Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=78c7f9b3,type=ConfigurationPropertiesRebinder]
Starting beans in phase 0
Setting initial instance status as: STARTING
Using JSON encoding codec LegacyJacksonJson
Using JSON decoding codec LegacyJacksonJson
Using XML encoding codec XStreamXml
Using XML decoding codec XStreamXml
Resolving eureka endpoints via configuration
Disable delta property : false
Single vip registry refresh property : null
Force full registry fetch : false
Application is null : false
Registered Applications size is zero : true
Application version is -1: true
Getting all instance registry info from the eureka server
The response status is 200
Starting heartbeat executor: renew interval is: 30
InstanceInfoReplicator onDemand update allowed rate per min is 4
Discovery Client initialized at timestamp 1511184815650 with initial instances count: 0
Registering application scweb-service with eureka with status UP
Saw local status change event StatusChangeEvent [timestamp=1511184815689, current=UP, previous=STARTING]
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088: registering service...
Initializing ProtocolHandler ["http-nio-8088"]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http)
Updating port to 8088
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088 - registration status: 204
Started ScbrlWebApplication in 5.932 seconds (JVM running for 6.42)
[------------------- >>> SpringBootApplication Main Start In ScbrlApplication <<< -------------------]
Disable delta property : false
Single vip registry refresh property : null
Force full registry fetch : false
Application is null : false
Registered Applications size is zero : true
Application version is -1: false
Getting all instance registry info from the eureka server
The response status is 200
Resolving eureka endpoints via configuration
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78c7f9b3: startup date [Mon Nov 20 21:33:31 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Unregistering application scweb-service with eureka with status DOWN
Saw local status change event StatusChangeEvent [timestamp=1511185201331, current=DOWN, previous=UP]
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088: registering service...
Shutting down DiscoveryClient ...
Unregistering ...
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088 - deregister  status: 200
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088 - registration status: 204
Completed shut down of DiscoveryClient
Stopping beans in phase 0
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec: startup date [Mon Nov 20 21:41:38 CST 2017]; root of context hierarchy
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9e321b21] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
HV000001: Hibernate Validator 5.3.5.Final
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4cee7fa0: startup date [Mon Nov 20 21:41:39 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Cannot enhance @Configuration bean definition 'refreshScope' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
BeanFactory id=f03e22e4-23ca-3405-90b1-5c75f13d52bd
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9e321b21] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$1ac5e05e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1e469dfd' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$3f9a8310] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.16
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1251 ms
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'springSecurityFilterChain' to: [/*]
Mapping servlet: 'dispatcherServlet' to [/]
Mapped "{[/main]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.main(javax.servlet.http.HttpServletRequest)
Mapped "{[/message]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.message()
Mapped "{[/identify]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.identify()
Mapped "{[/logout]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.loginOut(javax.servlet.http.HttpServletRequest)
Mapped "{[/userinfo]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.userinfo()
Mapped "{[/smsinfo]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.smsinfo()
Mapped "{[/home]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.home()
Mapped "{[/login]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
Mapped "{[/]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.TestController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/add]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.TestController.add(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4cee7fa0: startup date [Mon Nov 20 21:41:39 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Creating filter chain: Ant [pattern='/static/**'], []
Creating filter chain: Ant [pattern='/templates/**'], []
Creating filter chain: Ant [pattern='/loginOut'], []
Creating filter chain: Ant [pattern='/'], []
Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@ab4aa5e, org.springframework.security.web.context.SecurityContextPersistenceFilter@c2cf597, org.springframework.security.web.header.HeaderWriterFilter@6637a365, org.springframework.security.web.authentication.logout.LogoutFilter@1f78d415, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2744dcae, org.springframework.security.web.session.ConcurrentSessionFilter@40943a6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2abafa97, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@587c5c1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@b14b60a, org.springframework.security.web.session.SessionManagementFilter@1ef31f71, org.springframework.security.web.access.ExceptionTranslationFilter@1213ffbc, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@22a260ff]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
No URLs will be polled as dynamic configuration sources.
To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
No URLs will be polled as dynamic configuration sources.
To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
Registering beans for JMX exposure on startup
Bean with name 'refreshScope' has been autodetected for JMX exposure
Bean with name 'environmentManager' has been autodetected for JMX exposure
Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4cee7fa0,type=ConfigurationPropertiesRebinder]
Starting beans in phase 0
Setting initial instance status as: STARTING
Using JSON encoding codec LegacyJacksonJson
Using JSON decoding codec LegacyJacksonJson
Using XML encoding codec XStreamXml
Using XML decoding codec XStreamXml
Resolving eureka endpoints via configuration
Disable delta property : false
Single vip registry refresh property : null
Force full registry fetch : false
Application is null : false
Registered Applications size is zero : true
Application version is -1: true
Getting all instance registry info from the eureka server
The response status is 200
Starting heartbeat executor: renew interval is: 30
InstanceInfoReplicator onDemand update allowed rate per min is 4
Discovery Client initialized at timestamp 1511185303343 with initial instances count: 2
Registering application scweb-service with eureka with status UP
Saw local status change event StatusChangeEvent [timestamp=1511185303400, current=UP, previous=STARTING]
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088: registering service...
Initializing ProtocolHandler ["http-nio-8088"]
Starting ProtocolHandler ["http-nio-8088"]
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088 - registration status: 204
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http)
Updating port to 8088
Started ScbrlWebApplication in 5.745 seconds (JVM running for 6.217)
[------------------- >>> SpringBootApplication Main Start In ScbrlApplication <<< -------------------]
A cookie header was received [1506871140,1507536467,1507598270] that contained an invalid cookie. That cookie will be ignored.Note: further occurrences of this error will be logged at DEBUG level.
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
>>>>>>>>>>>>>>>>>>>>: null
>>>>>>>>>>>>>>>>>>>>: null
Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@689a43fa: startup date [Mon Nov 20 21:41:58 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4cee7fa0
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Flipping property: provider-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
Shutdown hook installed for: NFLoadBalancer-PingTimer-provider-service
Client:provider-service instantiated a LoadBalancer:DynamicServerListLoadBalancer:{NFLoadBalancer:name=provider-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
Using serverListUpdater PollingServerListUpdater
Flipping property: provider-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
DynamicServerListLoadBalancer for client provider-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=provider-service,current list of Servers=[192.168.11.114:8012],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.11.114:8012;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@11fee63a
登录认证失败:Wrong password. 账户或密码不正确！|null
>>>>>>>>>>>>>>>>>>>>: Wrong password. 账户或密码不正确！
>>>>>>>>>>>>>>>>>>>>: null
Flipping property: provider-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
Resolving eureka endpoints via configuration
Resolving eureka endpoints via configuration
Resolving eureka endpoints via configuration
Resolving eureka endpoints via configuration
Resolving eureka endpoints via configuration
Resolving eureka endpoints via configuration
Resolving eureka endpoints via configuration
Resolving eureka endpoints via configuration
Resolving eureka endpoints via configuration
Resolving eureka endpoints via configuration
Resolving eureka endpoints via configuration
Shutting down the Executor Pool for PollingServerListUpdater
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4cee7fa0: startup date [Mon Nov 20 21:41:39 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Unregistering application scweb-service with eureka with status DOWN
Saw local status change event StatusChangeEvent [timestamp=1511188606498, current=DOWN, previous=UP]
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088: registering service...
Shutting down DiscoveryClient ...
Unregistering ...
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088 - registration status: 204
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088 - deregister  status: 200
Completed shut down of DiscoveryClient
Stopping beans in phase 0
Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@689a43fa: startup date [Mon Nov 20 21:41:58 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4cee7fa0
Unregistering application scweb-service with eureka with status DOWN
Shutdown hook removed for: NFLoadBalancer-PingTimer-provider-service
Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:614)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:886)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:274)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:70)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec: startup date [Mon Nov 20 22:45:56 CST 2017]; root of context hierarchy
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
HV000001: Hibernate Validator 5.3.5.Final
Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c38f032f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6edc4161: startup date [Mon Nov 20 22:45:57 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Cannot enhance @Configuration bean definition 'refreshScope' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
BeanFactory id=f03e22e4-23ca-3405-90b1-5c75f13d52bd
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c38f032f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$4022c86c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@68b9834c' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$64f76b1e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.16
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1321 ms
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'springSecurityFilterChain' to: [/*]
Mapping servlet: 'dispatcherServlet' to [/]
Mapped "{[/main]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.main(javax.servlet.http.HttpServletRequest)
Mapped "{[/message]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.message()
Mapped "{[/identify]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.identify()
Mapped "{[/smsinfo]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.smsinfo()
Mapped "{[/login]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
Mapped "{[/logout]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.loginOut(javax.servlet.http.HttpServletRequest)
Mapped "{[/home]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.home()
Mapped "{[/userinfo]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.userinfo()
Mapped "{[/]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.TestController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/add]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.TestController.add(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6edc4161: startup date [Mon Nov 20 22:45:57 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Creating filter chain: Ant [pattern='/static/**'], []
Creating filter chain: Ant [pattern='/templates/**'], []
Creating filter chain: Ant [pattern='/loginOut'], []
Creating filter chain: Ant [pattern='/'], []
Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@374c40ba, org.springframework.security.web.context.SecurityContextPersistenceFilter@f245bdd, org.springframework.security.web.header.HeaderWriterFilter@3554bdc0, org.springframework.security.web.authentication.logout.LogoutFilter@8840c98, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3c7279a5, org.springframework.security.web.session.ConcurrentSessionFilter@764fffa0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@280fafd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4b957db0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@18dcb8a7, org.springframework.security.web.session.SessionManagementFilter@49580ca8, org.springframework.security.web.access.ExceptionTranslationFilter@13cc0b90, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@102c18e]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
No URLs will be polled as dynamic configuration sources.
To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
No URLs will be polled as dynamic configuration sources.
To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
Registering beans for JMX exposure on startup
Bean with name 'refreshScope' has been autodetected for JMX exposure
Bean with name 'environmentManager' has been autodetected for JMX exposure
Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=6edc4161,type=ConfigurationPropertiesRebinder]
Starting beans in phase 0
Setting initial instance status as: STARTING
Using JSON encoding codec LegacyJacksonJson
Using JSON decoding codec LegacyJacksonJson
Using XML encoding codec XStreamXml
Using XML decoding codec XStreamXml
Resolving eureka endpoints via configuration
Disable delta property : false
Single vip registry refresh property : null
Force full registry fetch : false
Application is null : false
Registered Applications size is zero : true
Application version is -1: true
Getting all instance registry info from the eureka server
The response status is 200
Starting heartbeat executor: renew interval is: 30
InstanceInfoReplicator onDemand update allowed rate per min is 4
Discovery Client initialized at timestamp 1511189161900 with initial instances count: 1
Registering application scweb-service with eureka with status UP
Saw local status change event StatusChangeEvent [timestamp=1511189161954, current=UP, previous=STARTING]
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088: registering service...
Initializing ProtocolHandler ["http-nio-8088"]
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088 - registration status: 204
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http)
Updating port to 8088
Started ScbrlWebApplication in 5.816 seconds (JVM running for 6.293)
[------------------- >>> SpringBootApplication Main Start In ScbrlApplication <<< -------------------]
A cookie header was received [1506871140,1507536467,1507598270] that contained an invalid cookie. That cookie will be ignored.Note: further occurrences of this error will be logged at DEBUG level.
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
>>>>>>>>>>>>>>>>>>>>: null
>>>>>>>>>>>>>>>>>>>>: null
Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@471386b5: startup date [Mon Nov 20 22:46:12 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6edc4161
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Flipping property: provider-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
Shutdown hook installed for: NFLoadBalancer-PingTimer-provider-service
Client:provider-service instantiated a LoadBalancer:DynamicServerListLoadBalancer:{NFLoadBalancer:name=provider-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
Using serverListUpdater PollingServerListUpdater
Flipping property: provider-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
DynamicServerListLoadBalancer for client provider-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=provider-service,current list of Servers=[192.168.11.114:8012],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.11.114:8012;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1456b4a0
登录认证失败:Wrong password. 账户或密码不正确！|null
>>>>>>>>>>>>>>>>>>>>: Wrong password. 账户或密码不正确！
>>>>>>>>>>>>>>>>>>>>: null
Flipping property: provider-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
Resolving eureka endpoints via configuration
Resolving eureka endpoints via configuration
Shutting down the Executor Pool for PollingServerListUpdater
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6edc4161: startup date [Mon Nov 20 22:45:57 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Unregistering application scweb-service with eureka with status DOWN
Saw local status change event StatusChangeEvent [timestamp=1511189863160, current=DOWN, previous=UP]
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088: registering service...
Shutting down DiscoveryClient ...
Unregistering ...
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088 - registration status: 204
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088 - deregister  status: 200
Completed shut down of DiscoveryClient
Stopping beans in phase 0
Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@471386b5: startup date [Mon Nov 20 22:46:12 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6edc4161
Unregistering application scweb-service with eureka with status DOWN
Shutdown hook removed for: NFLoadBalancer-PingTimer-provider-service
Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:614)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:886)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:274)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:70)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec: startup date [Mon Nov 20 22:57:58 CST 2017]; root of context hierarchy
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9e321b21] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
HV000001: Hibernate Validator 5.3.5.Final
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4cee7fa0: startup date [Mon Nov 20 22:57:59 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Cannot enhance @Configuration bean definition 'refreshScope' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
BeanFactory id=f03e22e4-23ca-3405-90b1-5c75f13d52bd
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9e321b21] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$1ac5e05e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7a729f84' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$3f9a8310] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.16
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1252 ms
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'springSecurityFilterChain' to: [/*]
Mapping servlet: 'dispatcherServlet' to [/]
Mapped "{[/main]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.main(javax.servlet.http.HttpServletRequest)
Mapped "{[/message]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.message()
Mapped "{[/userinfo]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.userinfo()
Mapped "{[/login]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
Mapped "{[/logout]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.loginOut(javax.servlet.http.HttpServletRequest)
Mapped "{[/home]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.home()
Mapped "{[/smsinfo]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.smsinfo()
Mapped "{[/identify]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.identify()
Mapped "{[/]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.TestController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/add]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.TestController.add(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4cee7fa0: startup date [Mon Nov 20 22:57:59 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Creating filter chain: Ant [pattern='/static/**'], []
Creating filter chain: Ant [pattern='/templates/**'], []
Creating filter chain: Ant [pattern='/loginOut'], []
Creating filter chain: Ant [pattern='/'], []
Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@22a260ff, org.springframework.security.web.context.SecurityContextPersistenceFilter@3375ebd3, org.springframework.security.web.header.HeaderWriterFilter@6a3fbcb1, org.springframework.security.web.authentication.logout.LogoutFilter@5460edd3, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@265a094b, org.springframework.security.web.session.ConcurrentSessionFilter@2199e845, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@798cb6d9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@40717ed, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@54c425b1, org.springframework.security.web.session.SessionManagementFilter@15d3793b, org.springframework.security.web.access.ExceptionTranslationFilter@7fd99443, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@697a0948]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
No URLs will be polled as dynamic configuration sources.
To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
No URLs will be polled as dynamic configuration sources.
To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
Registering beans for JMX exposure on startup
Bean with name 'refreshScope' has been autodetected for JMX exposure
Bean with name 'environmentManager' has been autodetected for JMX exposure
Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4cee7fa0,type=ConfigurationPropertiesRebinder]
Starting beans in phase 0
Setting initial instance status as: STARTING
Using JSON encoding codec LegacyJacksonJson
Using JSON decoding codec LegacyJacksonJson
Using XML encoding codec XStreamXml
Using XML decoding codec XStreamXml
Resolving eureka endpoints via configuration
Disable delta property : false
Single vip registry refresh property : null
Force full registry fetch : false
Application is null : false
Registered Applications size is zero : true
Application version is -1: true
Getting all instance registry info from the eureka server
The response status is 200
Starting heartbeat executor: renew interval is: 30
InstanceInfoReplicator onDemand update allowed rate per min is 4
Discovery Client initialized at timestamp 1511189883572 with initial instances count: 1
Registering application scweb-service with eureka with status UP
Saw local status change event StatusChangeEvent [timestamp=1511189883620, current=UP, previous=STARTING]
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088: registering service...
Initializing ProtocolHandler ["http-nio-8088"]
Starting ProtocolHandler ["http-nio-8088"]
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088 - registration status: 204
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http)
Updating port to 8088
Started ScbrlWebApplication in 5.664 seconds (JVM running for 6.124)
[------------------- >>> SpringBootApplication Main Start In ScbrlApplication <<< -------------------]
A cookie header was received [1506871140,1507536467,1507598270] that contained an invalid cookie. That cookie will be ignored.Note: further occurrences of this error will be logged at DEBUG level.
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 44 ms
Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4278f42d: startup date [Mon Nov 20 22:58:28 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4cee7fa0
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Flipping property: provider-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
Shutdown hook installed for: NFLoadBalancer-PingTimer-provider-service
Client:provider-service instantiated a LoadBalancer:DynamicServerListLoadBalancer:{NFLoadBalancer:name=provider-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
Using serverListUpdater PollingServerListUpdater
DynamicServerListLoadBalancer for client provider-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=provider-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@63597ed3
登录认证失败:user select fail. 登录用户数据异常！|null
>>>>>>>>>>>>>>>>>>>>: user select fail. 登录用户数据异常！
>>>>>>>>>>>>>>>>>>>>: null
登录认证失败:user select fail. 登录用户数据异常！|null
>>>>>>>>>>>>>>>>>>>>: user select fail. 登录用户数据异常！
>>>>>>>>>>>>>>>>>>>>: null
>>>>>>>>>>>>>>>>>>>>: null
>>>>>>>>>>>>>>>>>>>>: null
登录认证失败:user select fail. 登录用户数据异常！|null
>>>>>>>>>>>>>>>>>>>>: user select fail. 登录用户数据异常！
>>>>>>>>>>>>>>>>>>>>: null
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4cee7fa0: startup date [Mon Nov 20 22:57:59 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Shutting down the Executor Pool for PollingServerListUpdater
Unregistering application scweb-service with eureka with status DOWN
Saw local status change event StatusChangeEvent [timestamp=1511189993235, current=DOWN, previous=UP]
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088: registering service...
Shutting down DiscoveryClient ...
Unregistering ...
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088 - registration status: 204
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088 - deregister  status: 200
Completed shut down of DiscoveryClient
Stopping beans in phase 0
Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@4278f42d: startup date [Mon Nov 20 22:58:28 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4cee7fa0
Unregistering application scweb-service with eureka with status DOWN
Shutdown hook removed for: NFLoadBalancer-PingTimer-provider-service
Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:614)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:886)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:274)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:70)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec: startup date [Mon Nov 20 23:00:09 CST 2017]; root of context hierarchy
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$11a6779] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
HV000001: Hibernate Validator 5.3.5.Final
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4b1abd11: startup date [Mon Nov 20 23:00:10 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Cannot enhance @Configuration bean definition 'refreshScope' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
BeanFactory id=f03e22e4-23ca-3405-90b1-5c75f13d52bd
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$11a6779] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$7dae2cb6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@23f3da8b' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$a282cf68] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.16
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1245 ms
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'springSecurityFilterChain' to: [/*]
Mapping servlet: 'dispatcherServlet' to [/]
Mapped "{[/main]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.main(javax.servlet.http.HttpServletRequest)
Mapped "{[/message]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.message()
Mapped "{[/userinfo]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.userinfo()
Mapped "{[/home]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.home()
Mapped "{[/login]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
Mapped "{[/logout]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.loginOut(javax.servlet.http.HttpServletRequest)
Mapped "{[/smsinfo]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.smsinfo()
Mapped "{[/identify]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.identify()
Mapped "{[/]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.TestController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/add]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.TestController.add(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4b1abd11: startup date [Mon Nov 20 23:00:10 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Creating filter chain: Ant [pattern='/static/**'], []
Creating filter chain: Ant [pattern='/templates/**'], []
Creating filter chain: Ant [pattern='/loginOut'], []
Creating filter chain: Ant [pattern='/'], []
Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7c7e73c5, org.springframework.security.web.context.SecurityContextPersistenceFilter@50211483, org.springframework.security.web.header.HeaderWriterFilter@7e52a26b, org.springframework.security.web.authentication.logout.LogoutFilter@57bd6a8f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3a0aaaf0, org.springframework.security.web.session.ConcurrentSessionFilter@60bf494c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1472208d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@68ea253b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@13cc0b90, org.springframework.security.web.session.SessionManagementFilter@3f857e08, org.springframework.security.web.access.ExceptionTranslationFilter@47df5041, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3e28d779]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
No URLs will be polled as dynamic configuration sources.
To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
No URLs will be polled as dynamic configuration sources.
To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
Registering beans for JMX exposure on startup
Bean with name 'refreshScope' has been autodetected for JMX exposure
Bean with name 'environmentManager' has been autodetected for JMX exposure
Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4b1abd11,type=ConfigurationPropertiesRebinder]
Starting beans in phase 0
Setting initial instance status as: STARTING
Using JSON encoding codec LegacyJacksonJson
Using JSON decoding codec LegacyJacksonJson
Using XML encoding codec XStreamXml
Using XML decoding codec XStreamXml
Resolving eureka endpoints via configuration
Disable delta property : false
Single vip registry refresh property : null
Force full registry fetch : false
Application is null : false
Registered Applications size is zero : true
Application version is -1: true
Getting all instance registry info from the eureka server
The response status is 200
Starting heartbeat executor: renew interval is: 30
InstanceInfoReplicator onDemand update allowed rate per min is 4
Discovery Client initialized at timestamp 1511190014974 with initial instances count: 1
Registering application scweb-service with eureka with status UP
Saw local status change event StatusChangeEvent [timestamp=1511190015029, current=UP, previous=STARTING]
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088: registering service...
Initializing ProtocolHandler ["http-nio-8088"]
Starting ProtocolHandler ["http-nio-8088"]
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088 - registration status: 204
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http)
Updating port to 8088
Started ScbrlWebApplication in 5.714 seconds (JVM running for 6.163)
[------------------- >>> SpringBootApplication Main Start In ScbrlApplication <<< -------------------]
A cookie header was received [1506871140,1507536467,1507598270] that contained an invalid cookie. That cookie will be ignored.Note: further occurrences of this error will be logged at DEBUG level.
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@34e31e8e: startup date [Mon Nov 20 23:00:23 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4b1abd11
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Flipping property: provider-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
Shutdown hook installed for: NFLoadBalancer-PingTimer-provider-service
Client:provider-service instantiated a LoadBalancer:DynamicServerListLoadBalancer:{NFLoadBalancer:name=provider-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
Using serverListUpdater PollingServerListUpdater
Flipping property: provider-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
DynamicServerListLoadBalancer for client provider-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=provider-service,current list of Servers=[192.168.11.114:8012],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.11.114:8012;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5b4db2b6
登录认证失败:Wrong password. 账户或密码不正确！|null
>>>>>>>>>>>>>>>>>>>>: Wrong password. 账户或密码不正确！
>>>>>>>>>>>>>>>>>>>>: null
Flipping property: provider-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
登录认证失败:Wrong password. 账户或密码不正确！|null
>>>>>>>>>>>>>>>>>>>>: Wrong password. 账户或密码不正确！
>>>>>>>>>>>>>>>>>>>>: null
登录认证失败:Wrong password. 账户或密码不正确！|null
>>>>>>>>>>>>>>>>>>>>: Wrong password. 账户或密码不正确！
>>>>>>>>>>>>>>>>>>>>: null
Shutting down the Executor Pool for PollingServerListUpdater
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4b1abd11: startup date [Mon Nov 20 23:00:10 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Unregistering application scweb-service with eureka with status DOWN
Saw local status change event StatusChangeEvent [timestamp=1511190130922, current=DOWN, previous=UP]
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088: registering service...
Shutting down DiscoveryClient ...
Unregistering ...
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088 - registration status: 204
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088 - deregister  status: 200
Completed shut down of DiscoveryClient
Stopping beans in phase 0
Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@34e31e8e: startup date [Mon Nov 20 23:00:23 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4b1abd11
Unregistering application scweb-service with eureka with status DOWN
Shutdown hook removed for: NFLoadBalancer-PingTimer-provider-service
Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:614)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:886)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:274)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:70)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec: startup date [Mon Nov 20 23:06:47 CST 2017]; root of context hierarchy
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f303bcc4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
HV000001: Hibernate Validator 5.3.5.Final
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@75b21c3b: startup date [Mon Nov 20 23:06:48 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Cannot enhance @Configuration bean definition 'refreshScope' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
BeanFactory id=f03e22e4-23ca-3405-90b1-5c75f13d52bd
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f303bcc4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$6f978201] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@288ca5f0' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$946c24b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.16
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1292 ms
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'springSecurityFilterChain' to: [/*]
Mapping servlet: 'dispatcherServlet' to [/]
Mapped "{[/main]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.main(javax.servlet.http.HttpServletRequest)
Mapped "{[/message]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.message()
Mapped "{[/smsinfo]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.smsinfo()
Mapped "{[/login]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
Mapped "{[/logout]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.loginOut(javax.servlet.http.HttpServletRequest)
Mapped "{[/identify]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.identify()
Mapped "{[/home]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.home()
Mapped "{[/userinfo]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.userinfo()
Mapped "{[/]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.TestController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/add]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.TestController.add(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@75b21c3b: startup date [Mon Nov 20 23:06:48 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Creating filter chain: Ant [pattern='/static/**'], []
Creating filter chain: Ant [pattern='/templates/**'], []
Creating filter chain: Ant [pattern='/loginOut'], []
Creating filter chain: Ant [pattern='/'], []
Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6e8fdd19, org.springframework.security.web.context.SecurityContextPersistenceFilter@738a5848, org.springframework.security.web.header.HeaderWriterFilter@27b337bb, org.springframework.security.web.authentication.logout.LogoutFilter@77b5148c, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6637a365, org.springframework.security.web.session.ConcurrentSessionFilter@62ade015, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@324b6a56, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@20d19f2c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@35787726, org.springframework.security.web.session.SessionManagementFilter@5c18d6d4, org.springframework.security.web.access.ExceptionTranslationFilter@2f054f70, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@55e1192]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
No URLs will be polled as dynamic configuration sources.
To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
No URLs will be polled as dynamic configuration sources.
To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
Registering beans for JMX exposure on startup
Bean with name 'refreshScope' has been autodetected for JMX exposure
Bean with name 'environmentManager' has been autodetected for JMX exposure
Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=75b21c3b,type=ConfigurationPropertiesRebinder]
Starting beans in phase 0
Setting initial instance status as: STARTING
Using JSON encoding codec LegacyJacksonJson
Using JSON decoding codec LegacyJacksonJson
Using XML encoding codec XStreamXml
Using XML decoding codec XStreamXml
Resolving eureka endpoints via configuration
Disable delta property : false
Single vip registry refresh property : null
Force full registry fetch : false
Application is null : false
Registered Applications size is zero : true
Application version is -1: true
Getting all instance registry info from the eureka server
The response status is 200
Starting heartbeat executor: renew interval is: 30
InstanceInfoReplicator onDemand update allowed rate per min is 4
Discovery Client initialized at timestamp 1511190413020 with initial instances count: 1
Registering application scweb-service with eureka with status UP
Saw local status change event StatusChangeEvent [timestamp=1511190413073, current=UP, previous=STARTING]
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088: registering service...
Initializing ProtocolHandler ["http-nio-8088"]
Starting ProtocolHandler ["http-nio-8088"]
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088 - registration status: 204
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http)
Updating port to 8088
Started ScbrlWebApplication in 6.087 seconds (JVM running for 6.817)
[------------------- >>> SpringBootApplication Main Start In ScbrlApplication <<< -------------------]
A cookie header was received [1506871140,1507536467,1507598270] that contained an invalid cookie. That cookie will be ignored.Note: further occurrences of this error will be logged at DEBUG level.
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 17 ms
Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@61f53b1: startup date [Mon Nov 20 23:07:09 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@75b21c3b
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Flipping property: provider-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
Shutdown hook installed for: NFLoadBalancer-PingTimer-provider-service
Client:provider-service instantiated a LoadBalancer:DynamicServerListLoadBalancer:{NFLoadBalancer:name=provider-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
Using serverListUpdater PollingServerListUpdater
Flipping property: provider-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
DynamicServerListLoadBalancer for client provider-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=provider-service,current list of Servers=[192.168.11.114:8012],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.11.114:8012;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@51189ce1
登录认证失败:Wrong password. 账户或密码不正确！|null
>>>>>>>>>>>>>>>>>>>>: Wrong password. 账户或密码不正确！
>>>>>>>>>>>>>>>>>>>>: null
Flipping property: provider-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
Shutting down the Executor Pool for PollingServerListUpdater
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@75b21c3b: startup date [Mon Nov 20 23:06:48 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Unregistering application scweb-service with eureka with status DOWN
Saw local status change event StatusChangeEvent [timestamp=1511190503257, current=DOWN, previous=UP]
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088: registering service...
Shutting down DiscoveryClient ...
Unregistering ...
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088 - registration status: 204
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088 - deregister  status: 200
Completed shut down of DiscoveryClient
Stopping beans in phase 0
Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@61f53b1: startup date [Mon Nov 20 23:07:09 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@75b21c3b
Unregistering application scweb-service with eureka with status DOWN
Shutdown hook removed for: NFLoadBalancer-PingTimer-provider-service
Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:614)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:886)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:274)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:70)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec: startup date [Mon Nov 20 23:08:40 CST 2017]; root of context hierarchy
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$69797ab5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
HV000001: Hibernate Validator 5.3.5.Final
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ca66933: startup date [Mon Nov 20 23:08:40 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Cannot enhance @Configuration bean definition 'refreshScope' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
BeanFactory id=f03e22e4-23ca-3405-90b1-5c75f13d52bd
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$69797ab5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$e60d3ff2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4e08acf9' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$ae1e2a4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.16
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1282 ms
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'springSecurityFilterChain' to: [/*]
Mapping servlet: 'dispatcherServlet' to [/]
Mapped "{[/main]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.main(javax.servlet.http.HttpServletRequest)
Mapped "{[/message]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.message()
Mapped "{[/smsinfo]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.smsinfo()
Mapped "{[/identify]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.identify()
Mapped "{[/login]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
Mapped "{[/home]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.home()
Mapped "{[/logout]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.loginOut(javax.servlet.http.HttpServletRequest)
Mapped "{[/userinfo]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.userinfo()
Mapped "{[/]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.TestController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/add]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.TestController.add(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ca66933: startup date [Mon Nov 20 23:08:40 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Creating filter chain: Ant [pattern='/static/**'], []
Creating filter chain: Ant [pattern='/templates/**'], []
Creating filter chain: Ant [pattern='/loginOut'], []
Creating filter chain: Ant [pattern='/'], []
Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1a21f43f, org.springframework.security.web.context.SecurityContextPersistenceFilter@57e5396b, org.springframework.security.web.header.HeaderWriterFilter@5729b410, org.springframework.security.web.authentication.logout.LogoutFilter@631c6d11, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2f995afc, org.springframework.security.web.session.ConcurrentSessionFilter@668cc9a2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6467ddc7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3b97907c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7f0a133d, org.springframework.security.web.session.SessionManagementFilter@3b7c58e7, org.springframework.security.web.access.ExceptionTranslationFilter@6097fca9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5f08fe00]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
No URLs will be polled as dynamic configuration sources.
To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
No URLs will be polled as dynamic configuration sources.
To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
Registering beans for JMX exposure on startup
Bean with name 'refreshScope' has been autodetected for JMX exposure
Bean with name 'environmentManager' has been autodetected for JMX exposure
Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=ca66933,type=ConfigurationPropertiesRebinder]
Starting beans in phase 0
Setting initial instance status as: STARTING
Using JSON encoding codec LegacyJacksonJson
Using JSON decoding codec LegacyJacksonJson
Using XML encoding codec XStreamXml
Using XML decoding codec XStreamXml
Resolving eureka endpoints via configuration
Disable delta property : false
Single vip registry refresh property : null
Force full registry fetch : false
Application is null : false
Registered Applications size is zero : true
Application version is -1: true
Getting all instance registry info from the eureka server
The response status is 200
Starting heartbeat executor: renew interval is: 30
InstanceInfoReplicator onDemand update allowed rate per min is 4
Discovery Client initialized at timestamp 1511190525224 with initial instances count: 1
Registering application scweb-service with eureka with status UP
Saw local status change event StatusChangeEvent [timestamp=1511190525270, current=UP, previous=STARTING]
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088: registering service...
Initializing ProtocolHandler ["http-nio-8088"]
Starting ProtocolHandler ["http-nio-8088"]
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088 - registration status: 204
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http)
Updating port to 8088
Started ScbrlWebApplication in 5.748 seconds (JVM running for 6.22)
[------------------- >>> SpringBootApplication Main Start In ScbrlApplication <<< -------------------]
A cookie header was received [1506871140,1507536467,1507598270] that contained an invalid cookie. That cookie will be ignored.Note: further occurrences of this error will be logged at DEBUG level.
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3eb91599: startup date [Mon Nov 20 23:08:49 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ca66933
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Flipping property: provider-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
Shutdown hook installed for: NFLoadBalancer-PingTimer-provider-service
Client:provider-service instantiated a LoadBalancer:DynamicServerListLoadBalancer:{NFLoadBalancer:name=provider-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
Using serverListUpdater PollingServerListUpdater
Flipping property: provider-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
DynamicServerListLoadBalancer for client provider-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=provider-service,current list of Servers=[192.168.11.114:8012],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.11.114:8012;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4d63b336
登录认证失败:Wrong password. 账户或密码不正确！|null
>>>>>>>>>>>>>>>>>>>>: Wrong password. 账户或密码不正确！
>>>>>>>>>>>>>>>>>>>>: null
Flipping property: provider-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
登录认证失败:user select fail. 登录用户数据异常！|null
>>>>>>>>>>>>>>>>>>>>: user select fail. 登录用户数据异常！
>>>>>>>>>>>>>>>>>>>>: null
Shutting down the Executor Pool for PollingServerListUpdater
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ca66933: startup date [Mon Nov 20 23:08:40 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Unregistering application scweb-service with eureka with status DOWN
Saw local status change event StatusChangeEvent [timestamp=1511190693246, current=DOWN, previous=UP]
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088: registering service...
Shutting down DiscoveryClient ...
Unregistering ...
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088 - deregister  status: 200
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088 - registration status: 204
Completed shut down of DiscoveryClient
Stopping beans in phase 0
Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@3eb91599: startup date [Mon Nov 20 23:08:49 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ca66933
Unregistering application scweb-service with eureka with status DOWN
Shutdown hook removed for: NFLoadBalancer-PingTimer-provider-service
Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:614)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:886)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:274)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:70)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec: startup date [Mon Nov 20 23:11:49 CST 2017]; root of context hierarchy
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
HV000001: Hibernate Validator 5.3.5.Final
Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7fafbc3c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@13cd7ea5: startup date [Mon Nov 20 23:11:49 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Cannot enhance @Configuration bean definition 'refreshScope' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
BeanFactory id=f03e22e4-23ca-3405-90b1-5c75f13d52bd
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7fafbc3c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$fc438179] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@127a7272' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$2118242b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.16
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1249 ms
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'springSecurityFilterChain' to: [/*]
Mapping servlet: 'dispatcherServlet' to [/]
Mapped "{[/main]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.main(javax.servlet.http.HttpServletRequest)
Mapped "{[/message]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.message()
Mapped "{[/identify]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.identify()
Mapped "{[/logout]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.loginOut(javax.servlet.http.HttpServletRequest)
Mapped "{[/smsinfo]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.smsinfo()
Mapped "{[/home]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.home()
Mapped "{[/login]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
Mapped "{[/userinfo]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.userinfo()
Mapped "{[/]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.TestController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/add]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.TestController.add(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@13cd7ea5: startup date [Mon Nov 20 23:11:49 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Creating filter chain: Ant [pattern='/static/**'], []
Creating filter chain: Ant [pattern='/templates/**'], []
Creating filter chain: Ant [pattern='/loginOut'], []
Creating filter chain: Ant [pattern='/'], []
Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@f882465, org.springframework.security.web.context.SecurityContextPersistenceFilter@14b275bd, org.springframework.security.web.header.HeaderWriterFilter@42fc4ac4, org.springframework.security.web.authentication.logout.LogoutFilter@7ab2a07e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@18dcb8a7, org.springframework.security.web.session.ConcurrentSessionFilter@18e4674d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4b03cbad, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@273fa9e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@72ecbcb3, org.springframework.security.web.session.SessionManagementFilter@29962b2f, org.springframework.security.web.access.ExceptionTranslationFilter@49580ca8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2bebd114]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
No URLs will be polled as dynamic configuration sources.
To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
No URLs will be polled as dynamic configuration sources.
To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
Registering beans for JMX exposure on startup
Bean with name 'refreshScope' has been autodetected for JMX exposure
Bean with name 'environmentManager' has been autodetected for JMX exposure
Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=13cd7ea5,type=ConfigurationPropertiesRebinder]
Starting beans in phase 0
Setting initial instance status as: STARTING
Using JSON encoding codec LegacyJacksonJson
Using JSON decoding codec LegacyJacksonJson
Using XML encoding codec XStreamXml
Using XML decoding codec XStreamXml
Resolving eureka endpoints via configuration
Disable delta property : false
Single vip registry refresh property : null
Force full registry fetch : false
Application is null : false
Registered Applications size is zero : true
Application version is -1: true
Getting all instance registry info from the eureka server
The response status is 200
Starting heartbeat executor: renew interval is: 30
InstanceInfoReplicator onDemand update allowed rate per min is 4
Discovery Client initialized at timestamp 1511190714344 with initial instances count: 2
Registering application scweb-service with eureka with status UP
Saw local status change event StatusChangeEvent [timestamp=1511190714389, current=UP, previous=STARTING]
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088: registering service...
Initializing ProtocolHandler ["http-nio-8088"]
Starting ProtocolHandler ["http-nio-8088"]
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088 - registration status: 204
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http)
Updating port to 8088
Started ScbrlWebApplication in 5.866 seconds (JVM running for 6.323)
[------------------- >>> SpringBootApplication Main Start In ScbrlApplication <<< -------------------]
A cookie header was received [1506871140,1507536467,1507598270] that contained an invalid cookie. That cookie will be ignored.Note: further occurrences of this error will be logged at DEBUG level.
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3ac5c184: startup date [Mon Nov 20 23:12:05 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@13cd7ea5
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Flipping property: provider-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
Shutdown hook installed for: NFLoadBalancer-PingTimer-provider-service
Client:provider-service instantiated a LoadBalancer:DynamicServerListLoadBalancer:{NFLoadBalancer:name=provider-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
Using serverListUpdater PollingServerListUpdater
Flipping property: provider-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
DynamicServerListLoadBalancer for client provider-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=provider-service,current list of Servers=[192.168.11.114:8012],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.11.114:8012;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@322e7881
登录认证失败:Wrong password. 账户或密码不正确！|null
>>>>>>>>>>>>>>>>>>>>: Wrong password. 账户或密码不正确！
>>>>>>>>>>>>>>>>>>>>: null
Flipping property: provider-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
Shutting down the Executor Pool for PollingServerListUpdater
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@13cd7ea5: startup date [Mon Nov 20 23:11:49 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Unregistering application scweb-service with eureka with status DOWN
Saw local status change event StatusChangeEvent [timestamp=1511190891277, current=DOWN, previous=UP]
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088: registering service...
Shutting down DiscoveryClient ...
Unregistering ...
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088 - deregister  status: 200
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088 - registration status: 204
Completed shut down of DiscoveryClient
Stopping beans in phase 0
Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@3ac5c184: startup date [Mon Nov 20 23:12:05 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@13cd7ea5
Unregistering application scweb-service with eureka with status DOWN
Shutdown hook removed for: NFLoadBalancer-PingTimer-provider-service
Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:614)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:886)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:274)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:70)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec: startup date [Mon Nov 20 23:16:05 CST 2017]; root of context hierarchy
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
HV000001: Hibernate Validator 5.3.5.Final
Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f303bcc4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5ffc5491: startup date [Mon Nov 20 23:16:06 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Cannot enhance @Configuration bean definition 'refreshScope' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
BeanFactory id=f03e22e4-23ca-3405-90b1-5c75f13d52bd
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f303bcc4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$6f978201] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@42ea287' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$946c24b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.16
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1362 ms
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'springSecurityFilterChain' to: [/*]
Mapping servlet: 'dispatcherServlet' to [/]
Mapped "{[/main]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.main(javax.servlet.http.HttpServletRequest)
Mapped "{[/message]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.message()
Mapped "{[/logout]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.loginOut(javax.servlet.http.HttpServletRequest)
Mapped "{[/identify]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.identify()
Mapped "{[/login]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
Mapped "{[/home]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.home()
Mapped "{[/smsinfo]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.smsinfo()
Mapped "{[/userinfo]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.IndexController.userinfo()
Mapped "{[/]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.TestController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/add]}" onto public org.springframework.web.servlet.ModelAndView com.scbrl.controller.TestController.add(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5ffc5491: startup date [Mon Nov 20 23:16:06 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Creating filter chain: Ant [pattern='/static/**'], []
Creating filter chain: Ant [pattern='/templates/**'], []
Creating filter chain: Ant [pattern='/loginOut'], []
Creating filter chain: Ant [pattern='/'], []
Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@27976390, org.springframework.security.web.context.SecurityContextPersistenceFilter@421d54b3, org.springframework.security.web.header.HeaderWriterFilter@6cbb175, org.springframework.security.web.authentication.logout.LogoutFilter@16b3c905, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6e8fdd19, org.springframework.security.web.session.ConcurrentSessionFilter@61f377d1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4dad8ec0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@36359723, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@37e0056e, org.springframework.security.web.session.SessionManagementFilter@7ab802f4, org.springframework.security.web.access.ExceptionTranslationFilter@59636c47, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6637a365]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
No URLs will be polled as dynamic configuration sources.
To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
No URLs will be polled as dynamic configuration sources.
To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
Registering beans for JMX exposure on startup
Bean with name 'refreshScope' has been autodetected for JMX exposure
Bean with name 'environmentManager' has been autodetected for JMX exposure
Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5ffc5491,type=ConfigurationPropertiesRebinder]
Starting beans in phase 0
Setting initial instance status as: STARTING
Using JSON encoding codec LegacyJacksonJson
Using JSON decoding codec LegacyJacksonJson
Using XML encoding codec XStreamXml
Using XML decoding codec XStreamXml
Resolving eureka endpoints via configuration
Disable delta property : false
Single vip registry refresh property : null
Force full registry fetch : false
Application is null : false
Registered Applications size is zero : true
Application version is -1: true
Getting all instance registry info from the eureka server
The response status is 200
Starting heartbeat executor: renew interval is: 30
InstanceInfoReplicator onDemand update allowed rate per min is 4
Discovery Client initialized at timestamp 1511190970987 with initial instances count: 2
Registering application scweb-service with eureka with status UP
Saw local status change event StatusChangeEvent [timestamp=1511190971047, current=UP, previous=STARTING]
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088: registering service...
Initializing ProtocolHandler ["http-nio-8088"]
Starting ProtocolHandler ["http-nio-8088"]
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088 - registration status: 204
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http)
Updating port to 8088
Started ScbrlWebApplication in 6.272 seconds (JVM running for 6.765)
[------------------- >>> SpringBootApplication Main Start In ScbrlApplication <<< -------------------]
A cookie header was received [1506871140,1507536467,1507598270] that contained an invalid cookie. That cookie will be ignored.Note: further occurrences of this error will be logged at DEBUG level.
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 15 ms
>>>>>>>>>>>>>>>>>>>>: null
>>>>>>>>>>>>>>>>>>>>: null
Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7b9b76c1: startup date [Mon Nov 20 23:16:29 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5ffc5491
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Flipping property: provider-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
Shutdown hook installed for: NFLoadBalancer-PingTimer-provider-service
Client:provider-service instantiated a LoadBalancer:DynamicServerListLoadBalancer:{NFLoadBalancer:name=provider-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
Using serverListUpdater PollingServerListUpdater
Flipping property: provider-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
DynamicServerListLoadBalancer for client provider-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=provider-service,current list of Servers=[192.168.11.114:8012],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.11.114:8012;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3fe50ff6
登录认证失败:Wrong password. 账户或密码不正确！|null
>>>>>>>>>>>>>>>>>>>>: Wrong password. 账户或密码不正确！
>>>>>>>>>>>>>>>>>>>>: null
Flipping property: provider-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
Shutting down the Executor Pool for PollingServerListUpdater
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5ffc5491: startup date [Mon Nov 20 23:16:06 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68d279ec
Unregistering application scweb-service with eureka with status DOWN
Saw local status change event StatusChangeEvent [timestamp=1511191058378, current=DOWN, previous=UP]
Shutting down DiscoveryClient ...
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088: registering service...
Unregistering ...
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088 - deregister  status: 200
DiscoveryClient_SCWEB-SERVICE/192.168.11.114:scweb-service:8088 - registration status: 204
Completed shut down of DiscoveryClient
Stopping beans in phase 0
Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@7b9b76c1: startup date [Mon Nov 20 23:16:29 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5ffc5491
Unregistering application scweb-service with eureka with status DOWN
Shutdown hook removed for: NFLoadBalancer-PingTimer-provider-service
Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:614)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:886)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:274)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:70)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
